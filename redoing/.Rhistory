str(data)
plot(data$price, data$freq)
plot(data$freq, data$price)
plot(data$price, data$freq)
filterd <- data[data$price < 500]
filterd <- data[data$price > 500]
filterd <- data[price > 500]
filterd <- data[data$price < 500,]
plot(data$price, data$freq)
plot(filterd$price, filterd$freq)
plot(data$price, data$freq)
plot(filterd$price, filterd$freq)
data[data$freq == max(data$freq)]
data[data$freq == max(data$freq)]
data[data$freq == max(data$freq),]
filterd <- data[data$price < 100,]
plot(data$price, data$freq)
plot(filterd$price, filterd$freq)
plot(data$price, data$freq)
filterd <- data[data$price < 200,]
plot(filterd$price, filterd$freq)
byCountry <- newAttacks[, .(.N/sumAttacks, ), by=.(country_txt)]
newAttacks <- DT[iyear > 2000]
sumAttacks <- newAttacks[, .N]
byCountry <- newAttacks[, .(.N/sumAttacks, ), by=.(country_txt)]
plot(data[data$budget < 10^9, data], data$gross)
data[data$budget < 10^9, ]
data <- read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv')
data <- read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv')
data[data$budget < 10^9, ]
data[data$budget < 10^9, ]$budget
plot(smalerBuget$budget, smalerBuget$budget)
smalerBuget <- data[data$budget < 10^9, ]
plot(smalerBuget$budget, smalerBuget$budget)
plot(smalerBuget$budget, smalerBuget$gross)
smalerBuget <- data[data$budget < 10^8, ]
plot(smalerBuget$budget, smalerBuget$gross)
plot(smalerBuget$imdb_score, smalerBuget$gross)
plot(smalerBuget$budget, smalerBuget$imdb_score)
plot(data$duration, data$gross)
plot(smalerBuget$budget, smalerBuget$imdb_score)
data <- as.data.table(read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv'))
data <- Data.table(read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv'))
library('Data.table')
data <- Data.table(read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv'))
data <- data.table(read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv'))
library('data.table')
data <- data.table(read.csv('C:/Users/wouter/Dropbox/school/data vis/imdb/movie_metadata.csv'))
moneyByDiriccors = data[, .(director_name, Sum(gross)), by= .(director_name)]
source('C:/Users/wouter/Dropbox/school/data vis/imdb/imdb.R', echo=TRUE)
moneyByDiriccors = data[, .(director_name, sum(gross)), by= .(director_name)]
moneyByDiriccors = data[, .(director_name, as.numeric(sum(gross))), by= .(director_name)]
barplot(moneyByDiriccors)
barplot(moneyByDiriccors$V2)
names(monneys) <- moneyByDiriccors$director_name
monneys <- moneyByDiriccors$V2
names(monneys) <- moneyByDiriccors$director_name
barplot(monneys )
moneyByDiriccors = data[sum(gross) > 10^8, .(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors$V2
names(monneys) <- moneyByDiriccors$director_name
barplot(monneys )
View(moneyByDiriccors)
moneyByDiriccors = data[order(sum(gross)), .(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors$V2
names(monneys) <- moneyByDiriccors$director_name
barplot(monneys )
barplot(order(monneys) )
moneyByDiriccors = data[, .(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors$V2
names(monneys) <- moneyByDiriccors$director_name
barplot(order(monneys) )
monneys <- order(moneyByDiriccors$V2)
names(monneys) <- moneyByDiriccors$director_name
barplot(monneys)
moneyByDiriccors = data[order(V2), .(director_name, as.numeric(sum(gross))), by= .(director_name)]
moneyByDiriccors = data[order(sum(gross)), .(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors$V2
names(monneys) <- moneyByDiriccors$director_name
barplot(monneys)
moneyByDiriccors = data[.(director_name, as.numeric(sum(gross))), by= .(director_name)]
moneyByDiriccors = data[,.(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors[order(V2), .(V2)]
names(monneys) <- moneyByDiriccors[order(V2), .(director_name)]
names(monneys) <- moneyByDiriccors[order(V2), director_name]
moneyByDiriccors[order(V2), director_name]
str(moneyByDiriccors[order(V2), director_name])
names(monneys) <- moneyByDiriccors[order(V2), as.character(director_name)]
moneyByDiriccors[order(V2), .(V2)]
moneyByDiriccors = data[,.(director_name, as.numeric(sum(gross))), by= .(director_name)]
monneys <- moneyByDiriccors[order(V2), .(V2)]
names(monneys) <- moneyByDiriccors[order(V2), as.character(director_name)]
moneyByDiriccors[order(V2), as.character(director_name)]
names(monneys) <- moneyByDiriccors[order(V2), .(as.character(director_name))]
str(moneyByDiriccors[order(V2), director_name])
str(moneyByDiriccors[order(V2), as.character(director_name)])
class(moneyByDiriccors[order(V2), as.character(director_name)])
names(monneys) <- moneyByDiriccors[order(V2), .(as.character(director_name))]
names(monneys) <- as.vector(moneyByDiriccors[order(V2), .(as.character(director_name))])
names(monneys) <- as.vector(moneyByDiriccors[order(V2), as.character(director_name)])
monneys <- moneyByDiriccors[order(V2), .(V2)]
barplot(monneys)
barplot(monneys$V2)
monneys <- moneyByDiriccors[order(V2) && V2 > 10^8, .(V2)]
barplot(monneys$V2)
monneys <- moneyByDiriccors[V2 > 10^8 && order(V2), .(V2)]
barplot(monneys$V2)
monneys <- moneyByDiriccors[V2 > 10^8, .(V2)][order(V2)]
barplot(monneys$V2)
monneys <- moneyByDiriccors[V2 > 10^8, .(V2)][order(-V2)]
barplot(monneys$V2)
monneys <- moneyByDiriccors[V2 > 10^9, .(V2)][order(-V2)]
barplot(monneys$V2)
barplot(monneys$V2, names.arg= moneyByDiriccors[V2 > 10^9, .(director_name)][order(-V2)])
monneys <- moneyByDiriccors[V2 > 10^9, .(V2)][order(-V2)]
barplot(monneys$V2, names.arg= moneyByDiriccors[V2 > 10^9, .(director_name)][order(-V2)])
barplot(monneys$V2, names.arg= moneyByDiriccors[order(-V2)][V2 > 10^9, .(director_name)])
moneyByDiriccors[order(-V2)][V2 > 10^9, .(director_name)]
barplot(monneys$V2, names.arg=moneyByDiriccors[order(-V2)][V2 > 10^9, .(director_name)])
barplot(monneys$V2, names.arg=moneyByDiriccors[order(-V2)][V2 > 10^9, .(director_name)]$director_name)
data <- read.csv('C:\Users\wouter\Dropbox\js\airbnbvsOsm\data\data.csv')
data <- read.csv('C:\\Users\\wouter\\Dropbox\\js\\airbnbvsOsm\\data\\data.csv')
View(data)
cor(data)
help("cor")
cor(data$price, data[-price])
cor(data$price, data)
sort(cor(data$price, data))
data
coro <- cor(data$price, data, method = c("pearson", "kendall", "spearman"))
library(jsonlite)
data <- read.json("C:/Users/wouter/Dropbox/school/AirBnBStatistics/airBnBscrape/generated/data.json")
data <- fromJSON("C:/Users/wouter/Dropbox/school/AirBnBStatistics/airBnBscrape/generated/data.json")
data
names(data)
install.packages(purrr)
library(jsonlite)
library(dplyr)
library(purrr)
setwd('C:\\Users\\wouter\\Dropbox\\school\\AirBnBStatistics\\redoing')
scrape <- fromJSON("./airbnb-scrape-1.json")
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
amenities <- scrape_rotterdam$amenity_ids
View(amenities)
amenities <- flatten(amenities)
amenities <- unique(flatten(amenities))
for (am in amenities) {
print (am)
}
for (am in amenities) {
scrape_rotterdam["amenity"+am] <- am %in% scrape_rotterdam$amenity_ids
}
for (am in amenities) {
scrape_rotterdam[paste("amenity", am)] <- am %in% scrape_rotterdam$amenity_ids
}
scrape_rotterdam
scrape_rotterdam[paste("amenity", am)] <- am %in% unlist(scrape_rotterdam$amenity_ids, use.names=FALSE)
for (am in amenities) {
scrape_rotterdam[paste("amenity", am)] <- am %in% unlist(scrape_rotterdam$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
for (am in amenities) {
scrape_rotterdam[paste("amenity", am)] <- am %in% unlist(scrape_rotterdam$amenity_ids, use.names=FALSE)
print(am %in% unlist(scrape_rotterdam$amenity_ids, use.names=FALSE))
}
print(unlist(scrape_rotterdam$amenity_ids, use.names=FALSE))
for (am in amenities) {
scrape_rotterdam[paste("amenity", am)] <- am %in% unlist(scrape_rotterdam$amenity_ids, use.names=FALSE)
print(unlist(scrape_rotterdam$amenity_ids, use.names=FALSE))
}
thing <- map(scrape_rotterdam, function(r) {
for (am in amenities) {
r[paste("amenity", am)] <- am %in% unlist(r$amenity_ids, use.names=FALSE)
}
r
})
thing <- map(scrape_rotterdam, function(r) {
for (am in amenities) {
r[paste("amenity", am)] <- am %in% unlist(r$amenity_ids, use.names=FALSE)
}
r
})
thing <- map(scrape_rotterdam, function(r) {
print(r)
for (am in amenities) {
r[paste("amenity", am)] <- am %in% unlist(r$amenity_ids, use.names=FALSE)
}
r
})
thing <- lapply(scrape_rotterdam, function(r) {
print(r)
for (am in amenities) {
r[paste("amenity", am)] <- am %in% unlist(r$amenity_ids, use.names=FALSE)
}
r
})
for (row in 1:nrow(scrape_rotterdam)){
print(scrape_rotterdam[row,])
}
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
for (row in 1:nrow(scrape_rotterdam)){
print(scrape_rotterdam[row,])
}
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row,][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
}
scrape_rotterdam
View(data)
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row,][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
}
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row,][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
warnings()
print(scrape_rotterdam[row,]$amenity_ids)
print(typeof(scrape_rotterdam[row,]$amenity_ids))
print(typeof(unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)))
print(unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE))
print(am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE))
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
print(am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE))
scrape_rotterdam[row,][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
View(scrape_rotterdam)
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
print(am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE))
scrape_rotterdam[paste("amenity", am)][row] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
print(am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE))
scrape_rotterdam[row][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row][paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
scrape_rotterdam
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row, paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
scrape_rotterdam
View(scrape_rotterdam)
sqrt
sqrt(c(1,2,3,4,5,6,7,8,9,10))
install.packages(purrr)
library(jsonlite)
library(dplyr)
library(purrr)
setwd('C:\\Users\\wouter\\Dropbox\\school\\AirBnBStatistics\\redoing')
scrape <- fromJSON("./airbnb-scrape-1.json")
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
amenities <- scrape_rotterdam$amenity_ids
amenities <- unique(flatten(amenities))
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row, paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
determineClass <- function(price) {
if (price < 14)
{1}
else if (14 <= price && price < 52)
{2}
else if (52 <= price && price < 85)
{3}
else if (85 <= price && price < 125)
{4}
else if (125 <= price && price < 275)
{5}
else
{6}
}
for(row in 1:nrow(scrape_rotterdam)){
scrape_rotterdam[row, "priceClass"] <- determineClass(scrape_rotterdam[row, "price"])
}
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam_train, method="class")
install.packages("purrr")
install.packages("purrr")
install.packages("rpart")
library(jsonlite)
library(dplyr)
library(purrr)
library("rpart")
library("rpart.plot")
install.packages("rpart.plot")
library(dplyr)
library(jsonlite)
library(dplyr)
library(purrr)
library("rpart")
library("rpart.plot")
setwd('C:\\Users\\wouter\\Dropbox\\school\\AirBnBStatistics\\redoing')
scrape <- fromJSON("./airbnb-scrape-1.json")
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
amenities <- scrape_rotterdam$amenity_ids
amenities <- unique(flatten(amenities))
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row, paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
determineClass <- function(price) {
if (price < 14)
{1}
else if (14 <= price && price < 52)
{2}
else if (52 <= price && price < 85)
{3}
else if (85 <= price && price < 125)
{4}
else if (125 <= price && price < 275)
{5}
else
{6}
}
for(row in 1:nrow(scrape_rotterdam)){
scrape_rotterdam[row, "priceClass"] <- determineClass(scrape_rotterdam[row, "price"])
}
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam_train, method="class")
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
scrape_rotterdam$host_languages <- NULL
scrape_rotterdam$amenity_ids <- NULL
scrape_rotterdam$city <- NULL
scrape_rotterdam$id <- NULL
scrape_rotterdam$is_business_travel_ready <- NULL
scrape_rotterdam$is_fully_refundable <- NULL
scrape_rotterdam$is_rebookable <- NULL
scrape_rotterdam$tier_id <- NULL
scrape_rotterdam$user_id <- NULL
scrape_rotterdam$name <- NULL
scrape_rotterdam$price <- NULL
scrape_rotterdam$price_with_service_fee <- NULL
scrape_rotterdam$currency <- NULL
scrape_rotterdam$rate_type <- NULL
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
scrape_rotterdam$currency <- NULL
scrape_rotterdam$rate_type <- NULL
scrape_rotterdam$room_type_category <- NULL
scrape_rotterdam$room_type <- NULL
scrape_rotterdam$room_and_property_type <- NULL
# no input data available
scrape_rotterdam$reviews_count <- NULL
scrape_rotterdam$picture_count <- NULL
scrape_rotterdam$is_host_highly_rated <- NULL
scrape_rotterdam$is_new_listing <- NULL
scrape_rotterdam$is_superhost <- NULL
scrape_rotterdam$latitude <- NULL
scrape_rotterdam$longitude <- NULL
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
scrape_rotterdam$bathrooms <- NULL
scrape_rotterdam$bedrooms <- NULL
scrape_rotterdam$beds <- NULL
scrape_rotterdam$person_capacity <- NULL
scrape_rotterdam$person_capacity <- NULL
scrape_rotterdam$property_type_id <- NULL
scrape_rotterdam$space_type <- NULL
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
scrape_rotterdam <- scrape
amenities <- scrape_rotterdam$amenity_ids
amenities <- unique(flatten(amenities))
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row, paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
determineClass <- function(price) {
if (price < 14)
{1}
else if (14 <= price && price < 52)
{2}
else if (52 <= price && price < 85)
{3}
else if (85 <= price && price < 125)
{4}
else if (125 <= price && price < 275)
{5}
else
{6}
}
for(row in 1:nrow(scrape_rotterdam)){
scrape_rotterdam[row, "priceClass"] <- determineClass(scrape_rotterdam[row, "price"])
}
scrape_rotterdam$host_languages <- NULL
scrape_rotterdam$amenity_ids <- NULL
scrape_rotterdam$city <- NULL
scrape_rotterdam$id <- NULL
scrape_rotterdam$is_business_travel_ready <- NULL
scrape_rotterdam$is_fully_refundable <- NULL
scrape_rotterdam$is_rebookable <- NULL
scrape_rotterdam$tier_id <- NULL
scrape_rotterdam$user_id <- NULL
scrape_rotterdam$name <- NULL
scrape_rotterdam$price <- NULL
scrape_rotterdam$price_with_service_fee <- NULL
scrape_rotterdam$currency <- NULL
scrape_rotterdam$rate_type <- NULL
scrape_rotterdam$room_type_category <- NULL
scrape_rotterdam$room_type <- NULL
scrape_rotterdam$room_and_property_type <- NULL
# no input data available
scrape_rotterdam$reviews_count <- NULL
scrape_rotterdam$picture_count <- NULL
scrape_rotterdam$is_host_highly_rated <- NULL
scrape_rotterdam$is_new_listing <- NULL
scrape_rotterdam$is_superhost <- NULL
scrape_rotterdam$latitude <- NULL
scrape_rotterdam$longitude <- NULL
scrape_rotterdam$bathrooms <- NULL
scrape_rotterdam$bedrooms <- NULL
scrape_rotterdam$beds <- NULL
scrape_rotterdam$person_capacity <- NULL
scrape_rotterdam$property_type_id <- NULL
scrape_rotterdam$space_type <- NULL
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
boxplot(scrape_rotterdam$price)
scrape <- fromJSON("./airbnb-scrape-1.json")
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
scrape_rotterdam <- scrape
boxplot(scrape_rotterdam$price)
quantile(scrape_rotterdam$price)
scrape_rotterdam <- scrape[!(scrape$city!="Rotterdam"),]
boxplot(scrape_rotterdam$price)
quantile(scrape_rotterdam$price)
amenities <- scrape_rotterdam$amenity_ids
amenities <- unique(flatten(amenities))
for (row in 1:nrow(scrape_rotterdam)){
for (am in amenities) {
scrape_rotterdam[row, paste("amenity", am)] <- am %in% unlist(scrape_rotterdam[row,]$amenity_ids, use.names=FALSE)
}
scrape_rotterdam
}
determineClass <- function(price) {
if (price < 14)
{1}
else if (14 <= price && price < 52)
{2}
else if (52 <= price && price < 85)
{3}
else if (85 <= price && price < 125)
{4}
else if (125 <= price && price < 275)
{5}
else
{6}
}
for(row in 1:nrow(scrape_rotterdam)){
scrape_rotterdam[row, "priceClass"] <- determineClass(scrape_rotterdam[row, "price"])
}
scrape_rotterdam$host_languages <- NULL
scrape_rotterdam$amenity_ids <- NULL
scrape_rotterdam$city <- NULL
scrape_rotterdam$id <- NULL
scrape_rotterdam$is_business_travel_ready <- NULL
scrape_rotterdam$is_fully_refundable <- NULL
scrape_rotterdam$is_rebookable <- NULL
scrape_rotterdam$tier_id <- NULL
scrape_rotterdam$user_id <- NULL
scrape_rotterdam$name <- NULL
scrape_rotterdam$price <- NULL
scrape_rotterdam$price_with_service_fee <- NULL
scrape_rotterdam$currency <- NULL
scrape_rotterdam$rate_type <- NULL
scrape_rotterdam$room_type_category <- NULL
scrape_rotterdam$room_type <- NULL
scrape_rotterdam$room_and_property_type <- NULL
# no input data available
scrape_rotterdam$reviews_count <- NULL
scrape_rotterdam$picture_count <- NULL
scrape_rotterdam$is_host_highly_rated <- NULL
scrape_rotterdam$is_new_listing <- NULL
scrape_rotterdam$is_superhost <- NULL
scrape_rotterdam$latitude <- NULL
scrape_rotterdam$longitude <- NULL
scrape_rotterdam$bathrooms <- NULL
scrape_rotterdam$bedrooms <- NULL
scrape_rotterdam$beds <- NULL
scrape_rotterdam$person_capacity <- NULL
scrape_rotterdam$property_type_id <- NULL
scrape_rotterdam$space_type <- NULL
dt_rotterdam <- rpart(priceClass~., scrape_rotterdam, method="class")
rpart.plot(dt_rotterdam, extra=101)
